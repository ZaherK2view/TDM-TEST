{
    "levels": [
        {
            "stages": [
                {
                    "name": "Test Connection",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "Check If PostgreSQL Admin Interface  Connection",
                            "actorType": {
                                "parentType": "DbCommand",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": "fabric"
                                    },
                                    {
                                        "name": "sql",
                                        "const": "test_connection interface=${POSTGRESQL_ADMIN}"
                                    },
                                    {
                                        "const": "POSTGRESQL_ADMIN",
                                        "name": "POSTGRESQL_ADMIN",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "interface": {
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "environment": {
                                                        "type": "string"
                                                    },
                                                    "active": {
                                                        "type": "boolean"
                                                    },
                                                    "passed": {
                                                        "type": "boolean"
                                                    },
                                                    "error_message": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Check Admin Interface",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "Check If Admin Interface is Active",
                            "actorType": {
                                "parentType": "assertTrue",
                                "inputs": [
                                    {
                                        "name": "message",
                                        "const": "The Admin interface of Postgres is not active, cannot create the TDM DB"
                                    }
                                ],
                                "outputs": []
                            }
                        },
                        {
                            "name": "Check If Admin Interface Is Valid",
                            "actorType": {
                                "parentType": "assertTrue",
                                "inputs": [
                                    {
                                        "name": "message",
                                        "const": "The Admin interface of Postgres is not valid, cannot create the TDM DB"
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Tmp View",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "DbCommand3",
                            "actorType": {
                                "parentType": "DbCommand",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": "POSTGRESQL_ADMIN"
                                    },
                                    {
                                        "name": "sql",
                                        "const": "CREATE Table IF NOT EXISTS public.tmp_roles AS SELECT rolname\r\n  FROM pg_catalog.pg_roles WHERE rolname in ('CRM_USER','BILLING_USER','ASSET_USER','TAR_CRM_USER','TAR_BILLING_USER','TAR_ASSET_USER')"
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Stage 2",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "Get  SQL Resource File",
                            "actorType": {
                                "parentType": "LuFunction",
                                "inputs": [
                                    {
                                        "name": "functionName",
                                        "const": "loadFromLUResource"
                                    },
                                    {
                                        "const": "TDM/TRAINING/tmpR.sql",
                                        "name": "path",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "blob"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Stage 3",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "CHECK ROLES",
                            "actorType": {
                                "parentType": "DbCommand",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": "POSTGRESQL_ADMIN"
                                    },
                                    {
                                        "name": "sql",
                                        "const": null
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Get Roles ",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "DbCommand2",
                            "actorType": {
                                "parentType": "DbCommand",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": "POSTGRESQL_ADMIN"
                                    },
                                    {
                                        "name": "sql",
                                        "const": "select rolname from public.tmp_roles where rolname NOT IN (select  rolname from pg_catalog.pg_roles)"
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "rolname": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Stage 1",
                    "dependsOnList": [],
                    "isLast": 1,
                    "actors": [
                        {
                            "name": "Create ROLE If Not Exists",
                            "actorType": {
                                "parentType": "InnerFlow",
                                "inputs": [
                                    {
                                        "name": "flowName",
                                        "const": "createRolesIfNotExists"
                                    },
                                    {
                                        "name": "ROLE_NAME",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Stage 4",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "DbCommand4",
                            "actorType": {
                                "parentType": "DbCommand",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": "POSTGRESQL_ADMIN"
                                    },
                                    {
                                        "name": "sql",
                                        "const": "CREATE TABLE IF NOT EXISTS public.tmp_databses AS SELECT datname\r\nFROM pg_catalog.pg_database WHERE datname in ('CRM_DB','BILLING_DB','ASSET_DB','TAR_CRM_DB','TAR_BILLING_DB','TAR_ASSET_DB')"
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Stage 6",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "Get  SQL Resource File__1",
                            "actorType": {
                                "parentType": "LuFunction",
                                "inputs": [
                                    {
                                        "name": "functionName",
                                        "const": "loadFromLUResource"
                                    },
                                    {
                                        "const": "TDM/TRAINING/tmpDB.sql",
                                        "name": "path",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "blob"
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Stage 7",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "CHECK DBS",
                            "actorType": {
                                "parentType": "DbCommand",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": "POSTGRESQL_ADMIN"
                                    },
                                    {
                                        "name": "sql",
                                        "const": null
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Get Name Of Databases",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": [
                        {
                            "name": "DbCommand1",
                            "actorType": {
                                "parentType": "DbCommand",
                                "inputs": [
                                    {
                                        "name": "interface",
                                        "const": "POSTGRESQL_ADMIN"
                                    },
                                    {
                                        "name": "sql",
                                        "const": "select datname from public.tmp_databses where datname NOT IN (select datname from pg_catalog.pg_database) \r\n"
                                    }
                                ],
                                "outputs": [
                                    {
                                        "name": "result",
                                        "schema": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "datname": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Check If Exists",
                    "dependsOnList": [],
                    "isLast": 1,
                    "actors": [
                        {
                            "name": "Create DB If Not Exists",
                            "actorType": {
                                "parentType": "InnerFlow",
                                "inputs": [
                                    {
                                        "name": "flowName",
                                        "const": "createDatabaseIfNotExists"
                                    },
                                    {
                                        "name": "DB_NAME",
                                        "schema": {
                                            "type": "string"
                                        },
                                        "mandatory": false
                                    }
                                ],
                                "outputs": []
                            }
                        }
                    ]
                }
            ]
        },
        {
            "stages": [
                {
                    "name": "Stage 5",
                    "dependsOnList": [],
                    "isLast": 0,
                    "actors": []
                }
            ]
        }
    ],
    "connections": [
        {
            "leftPort": {
                "actor": "Check If PostgreSQL Admin Interface  Connection",
                "name": "result"
            },
            "rightPort": {
                "actor": "Check If Admin Interface is Active",
                "name": "condition"
            },
            "path": [
                "active"
            ]
        },
        {
            "leftPort": {
                "actor": "Check If PostgreSQL Admin Interface  Connection",
                "name": "result"
            },
            "rightPort": {
                "actor": "Check If Admin Interface Is Valid",
                "name": "condition"
            },
            "path": [
                "passed"
            ]
        },
        {
            "leftPort": {
                "actor": "Get  SQL Resource File",
                "name": "result"
            },
            "rightPort": {
                "actor": "CHECK ROLES",
                "name": "sql"
            }
        },
        {
            "leftPort": {
                "actor": "DbCommand2",
                "name": "result"
            },
            "rightPort": {
                "actor": "Create ROLE If Not Exists",
                "name": "ROLE_NAME"
            },
            "iterate": "Iterate",
            "path": [
                "rolname"
            ]
        },
        {
            "leftPort": {
                "actor": "Get  SQL Resource File__1",
                "name": "result"
            },
            "rightPort": {
                "actor": "CHECK DBS",
                "name": "sql"
            }
        },
        {
            "leftPort": {
                "actor": "DbCommand1",
                "name": "result"
            },
            "rightPort": {
                "actor": "Create DB If Not Exists",
                "name": "DB_NAME"
            },
            "iterate": "Iterate",
            "path": [
                "datname"
            ]
        }
    ]
}